Set

objects: sets

morphisms: functions


Vect

objects: vector spaces

morphisms: linear functions

structure of a vector space?

[1, 0, 0] ∈ R^3

R^3 is a set because vector spaces are sets

but there are many sets which are not vector spaces

=> vector spaces are sets with a special structure

what is the structure of a vector space?

There are two operations on a set V
which make V into a vector space
and these two operations have to satisfy some axioms
(called the axioms of a vector space)


Structure:
+₁ : V₁ × V₁ -> V₁
⋅₁ : R  × V₁ -> V₁

structure must satisfy some defining axioms (laws):
associativity,
distributivity s ⋅ (a + b) == s ⋅ a + s ⋅ b
...
I think there are 8 such laws.

+₂ : V₂ × V₂ -> V₂ adding vectors
⋅₂ : R  × V₂ -> V₂ scaling vectors

f : V₁ -> V₂ ∈ Hom(V₁, V₂) # morphism in the category of vector spaces
given that
for any
V₁ ∋ x₁, x₂
R ∋ s
it holds that

f(x₁ +₁ x₂) == f(x₁) +₂ f(x₂)
f(s  ⋅₁ x₁) ==  s    ⋅₂ f(x₁)

----

Not all functions (morphisms in the category Set) are invertible.
Only the injective and bijective ones are.

f : A -> B

f^-1 : B -> A exists only if f is injective and bijective

A ∋ a
B ∋ b

TODO define what this means

preimage

preim_f(b) = {a ∈ A | f(a) = b } ⊂ A

if f^-1 exists then preim_f will be a set which always contains exactly 1 element


https://github.com/AlgebraicJulia/Catlab.jl/blob/master/src/wiring_diagrams/Undirected.jl


---


category Top
objects: topological spaces
morphisms: continuous functions

TODO make it clear to yourself why the 'continuous functions'
are the functions which preserve the topological structure.

f : S₁ -> S₂







forgetful functors:
Man -> Top -> Set


---

structure of category

composition
and
identity
are the fundamental structure of any category

categories C₁, C₂

Ob(C₁) ∋ a, b, c

g : Hom(a, b)
h : Hom(b, c)

composition for C₁
for any pair of morphisms where the first ends
where the second starts there exists a composite morphism
For example there exists h ∘ g : Hom(a, c)
composition must be associative

identity for C₁
for any object there exists an identity morphism
For example, id_b ∈ Hom(b, b) satisfies
id_b ∘ g = g (and similar for any other arrow going into b)
h ∘ id_b = h (and similar for any other arrow going out of b)

                g     id_b
 id_b ∘ g :  a ---> b ------> b




functor F : C₁ -> C₂

F(a) ∈ Ob(C₂)
F(b) ∈ Ob(C₂)

F(g) ∈ Hom(F(a), F(b))

   g      h
a ---> b ---> c

F is a functor

F(h ∘ g) == F(h) ∘ F(g)

F(id_a) = id_(F(a))
